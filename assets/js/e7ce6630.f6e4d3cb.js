"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[668],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),d=i,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5765:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=a(7462),i=(a(7294),a(3905));const r={},o="Clearance",s={type:"mdx",permalink:"/clearance/",source:"@site/src/pages/index.mdx",title:"Clearance",description:"Clearance is an access gatekeeper system for rest applications. It takes care of the classic user authentication along with a layer of access control conceived to handle possibly complex customer organisations with custom sets of access profiles for your application.",frontMatter:{}},l=[{value:"Features",id:"features",level:2},{value:"Advanced users and organisation management",id:"advanced-users-and-organisation-management",level:3},{value:"Same login, multiple organisations",id:"same-login-multiple-organisations",level:3},{value:"Service accounts",id:"service-accounts",level:3},{value:"Access profile managemnt",id:"access-profile-managemnt",level:3},{value:"Permanent and temporary access grants",id:"permanent-and-temporary-access-grants",level:3},{value:"Multiple out of the box authentication methods",id:"multiple-out-of-the-box-authentication-methods",level:3},{value:"Session audit and management",id:"session-audit-and-management",level:3},{value:"Keep your application simple",id:"keep-your-application-simple",level:3}],c={toc:l},p="wrapper";function u(e){let{components:t,...a}=e;return(0,i.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"clearance"},"Clearance"),(0,i.kt)("p",null,"Clearance is an access gatekeeper system for rest applications. It takes care of the classic user authentication along with a layer of access control conceived to handle possibly complex customer organisations with custom sets of access profiles for your application."),(0,i.kt)("p",null,"Clearance is aimed at SAAS applications that provide services to end customers or organisations of any kind. Organisation in this context refers to either business, educational or teams of individuals that need to share resources and cooperate in the environment of your application."),(0,i.kt)("p",null,"Clearance consists of both an ",(0,i.kt)("em",{parentName:"p"},"API")," and a ",(0,i.kt)("em",{parentName:"p"},"library"),". The API is responsible for managing user and access data while the library is intended to facilitate integration on the target application's behaviour."),(0,i.kt)("p",null,"Clearance makes no assumption on what kind of services your application provides. Instead, it keeps track of ",(0,i.kt)("em",{parentName:"p"},"access codes")," that correspond to specific application features or possible actions on your application resources. As an example consider the following accesses:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"salesLead.create"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contract.delete"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"applicationWorflowStep.approve"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"invoice.emit"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"monthlyReport.publish"),".")),(0,i.kt)("p",null,"These very specific access codes can be aggregated into ",(0,i.kt)("em",{parentName:"p"},"access profiles")," that will represent different use cases (",(0,i.kt)("inlineCode",{parentName:"p"},"Marketing manager"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Sales agent"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Customer care agent"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Invoicing robot"),")."),(0,i.kt)("p",null,'These profiles as well as individual access can be granted to users in your customer organisation. Note that your own organisation, this is, the organisation that operates the SAAS application, can use this system as well to manage their access to admin or "backoffice" features as well as to their customers\' data in order to fulfill their service (customer support teams for example).'),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("h3",{id:"advanced-users-and-organisation-management"},"Advanced users and organisation management"),(0,i.kt)("p",null,"Allow your customers to manage their users and easily fine control the different access profiles to your application's features."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a new user along with a new organisation"),(0,i.kt)("li",{parentName:"ul"},"Add a new user to an existing organisation"),(0,i.kt)("li",{parentName:"ul"},"Remove an user from an organisation")),(0,i.kt)("h3",{id:"same-login-multiple-organisations"},"Same login, multiple organisations"),(0,i.kt)("p",null,"An user can use the same account to access multiple organisations. Each organisation can grant applicative access to an user independently of how many other organisations the user may be a part of."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Invite an existing user to an organisation")),(0,i.kt)("h3",{id:"service-accounts"},"Service accounts"),(0,i.kt)("p",null,"Secure integration with each organisation's managed third party services through independent service accounts."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a service account for an organisation"),(0,i.kt)("li",{parentName:"ul"},"Control activation, deactivation and deletion of service accounts")),(0,i.kt)("h3",{id:"access-profile-managemnt"},"Access profile managemnt"),(0,i.kt)("p",null,"Register and manage access codes that correspond to specific application functions. Group them by comprehensive access profiles to match different use cases."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a specific access code"),(0,i.kt)("li",{parentName:"ul"},"Create an access profile from a set of access codes"),(0,i.kt)("li",{parentName:"ul"},"Control activation, deactivation and deprecation of access codes and profiles")),(0,i.kt)("h3",{id:"permanent-and-temporary-access-grants"},"Permanent and temporary access grants"),(0,i.kt)("p",null,"Keep a stable set of access grants for users and service accounts while keeping the flexibility for historized exceptions to handle exceptional business situations."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Grant a permanent access"),(0,i.kt)("li",{parentName:"ul"},"Grant a temporary access"),(0,i.kt)("li",{parentName:"ul"},"Revoke an access"),(0,i.kt)("li",{parentName:"ul"},"List all access for a recipient as of a given date")),(0,i.kt)("h3",{id:"multiple-out-of-the-box-authentication-methods"},"Multiple out of the box authentication methods"),(0,i.kt)("p",null,"Chosse the authentication methods that fits your application use cases, including the classic user-password login, 2fa, external oauth providers, ephemeral codes challenges, api keys or magic links."),(0,i.kt)("h3",{id:"session-audit-and-management"},"Session audit and management"),(0,i.kt)("p",null,"At any point, your users (or organisation admins) can audit current sessions and disable old ones or compromised devices' sessions."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"List all active sessions for an user"),(0,i.kt)("li",{parentName:"ul"},"Revoke a session")),(0,i.kt)("h3",{id:"keep-your-application-simple"},"Keep your application simple"),(0,i.kt)("p",null,"From the backend application's perspective api requests will already carry the full status of allowed access, user and organisation. Take advantage of easy to integrate middlewares for access validation and minimal authentication level requirements for sensitive operations."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Require access verification for request processing"),(0,i.kt)("li",{parentName:"ul"},"Negotiate/ensure minimal user authentication level before sensible request processing")),(0,i.kt)("p",null,"Once the requests have been authentified, the application will receive a request containing a list of all the access that the user is allowed to. The application will then block or authorise the requested action by verifying that the specific access that it expects is indeed allowed for the request."),(0,i.kt)("p",null,"Consider the following schematic usage on the application side :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="invoiceRouter.ts"',title:'"invoiceRouter.ts"'},"import clearanceSdk from 'clearance';\n\n/* ... */\n\ninvoiceRouter.put(\n  '/invoice/:id/emmit',\n  clearanceSdk.allow('invoice.emit'), // will either issue a 401 response or continue\n  (req, res) => {\n    /* ... */\n  });\n")))}u.isMDXComponent=!0}}]);